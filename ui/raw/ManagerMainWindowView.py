# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ManagerMainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_ManagerMainWindow(object):
    def setupUi(self, ManagerMainWindow):
        ManagerMainWindow.setObjectName("ManagerMainWindow")
        ManagerMainWindow.resize(830, 788)
        ManagerMainWindow.setStyleSheet("QMenuBar {\n"
                                        "background-color: rgb(250, 234, 153);\n"
                                        "font: 87 10pt \"Arial Black\";\n"
                                        "padding-left: 3px;\n"
                                        "    color: rgb(82, 30, 1);\n"
                                        "}\n"
                                        "\n"
                                        "QMenuBar::item {\n"
                                        "spacing: 3px; /* spacing between menu bar items */\n"
                                        "padding: 1px 4px;\n"
                                        "background: transparent;\n"
                                        "border-radius: 4px;\n"
                                        "background-color: rgb(250, 234, 153);\n"
                                        "}\n"
                                        "\n"
                                        "QMenuBar::item:selected { /* when selected using mouse or keyboard */\n"
                                        "background: #fac983;\n"
                                        "}\n"
                                        "\n"
                                        "QMenu {\n"
                                        "background-color: rgb(149, 166, 174); \n"
                                        "    font: 75 8pt \"Arial Black\";\n"
                                        "}\n"
                                        "\n"
                                        "QMenu::item {\n"
                                        "background-color: transparent;\n"
                                        "}\n"
                                        "\n"
                                        "QMenu::item:selected {\n"
                                        "background-color: #fac983; /* rot */\n"
                                        "}\n"
                                        "QWidget{background-color: rgb(255, 253, 223);}")
        self.centralwidget = QtWidgets.QWidget(ManagerMainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setStyleSheet("border: 0px solid;\n"
                                      "QAbstractScrollArea {\n"
                                      "    \n"
                                      "    border-radius: 10px;\n"
                                      "}\n"
                                      "\n"
                                      " QScrollBar::handle:vertical {\n"
                                      "    background: #fac983\n"
                                      " }")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 812, 729))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.exhibitonLabel = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exhibitonLabel.sizePolicy().hasHeightForWidth())
        self.exhibitonLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.exhibitonLabel.setFont(font)
        self.exhibitonLabel.setStyleSheet("QLabel {\n"
                                          "    font: 87 12pt \"Arial Black\";\n"
                                          "    color: rgb(82, 30, 1);\n"
                                          "}")
        self.exhibitonLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.exhibitonLabel.setObjectName("exhibitonLabel")
        self.horizontalLayout_4.addWidget(self.exhibitonLabel)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.setVisibleExhibitionTableButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setVisibleExhibitionTableButton.sizePolicy().hasHeightForWidth())
        self.setVisibleExhibitionTableButton.setSizePolicy(sizePolicy)
        self.setVisibleExhibitionTableButton.setMinimumSize(QtCore.QSize(40, 40))
        self.setVisibleExhibitionTableButton.setStyleSheet("\n"
                                                           "\n"
                                                           "QWidget {\n"
                                                           "    border 1px solid;\n"
                                                           "    border-radius: 20px;\n"
                                                           "    background-color: transparent;\n"
                                                           "    \n"
                                                           "}\n"
                                                           "\n"
                                                           "QPushButton {\n"
                                                           "    border-radius: 20px;\n"
                                                           "    border-style: outset;\n"
                                                           "\n"
                                                           "}\n"
                                                           "\n"
                                                           "QPushButton:hover {\n"
                                                           "    background: qradialgradient(\n"
                                                           "        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
                                                           "        radius: 1.35, stop: 0.7 #faea99, stop: 1 #521e01\n"
                                                           "        );\n"
                                                           "    }\n"
                                                           "\n"
                                                           "QPushButton:pressed {\n"
                                                           "    border-style: inset;\n"
                                                           "    background: qradialgradient(\n"
                                                           "        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,\n"
                                                           "        radius: 1.35, stop: 0 #fff, stop: 1 #521e01\n"
                                                           "        );\n"
                                                           "    }")
        self.setVisibleExhibitionTableButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../components/inactive drop button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.setVisibleExhibitionTableButton.setIcon(icon)
        self.setVisibleExhibitionTableButton.setIconSize(QtCore.QSize(40, 40))
        self.setVisibleExhibitionTableButton.setObjectName("setVisibleExhibitionTableButton")
        self.horizontalLayout_4.addWidget(self.setVisibleExhibitionTableButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.managerExhibitionTableWidget = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.managerExhibitionTableWidget.setMinimumSize(QtCore.QSize(0, 236))
        self.managerExhibitionTableWidget.setStyleSheet("QMenuBar {\n"
                                                        "background-color: rgb(250, 234, 153);\n"
                                                        "font: 87 10pt \"Arial Black\";\n"
                                                        "padding-left: 3px;\n"
                                                        "    color: rgb(82, 30, 1);\n"
                                                        "}\n"
                                                        "\n"
                                                        "QMenuBar::item {\n"
                                                        "spacing: 3px; /* spacing between menu bar items */\n"
                                                        "padding: 1px 4px;\n"
                                                        "background: transparent;\n"
                                                        "border-radius: 4px;\n"
                                                        "background-color: rgb(250, 234, 153);\n"
                                                        "}\n"
                                                        "\n"
                                                        "QMenuBar::item:selected { /* when selected using mouse or keyboard */\n"
                                                        "background: #fac983;\n"
                                                        "}\n"
                                                        "\n"
                                                        "QMenu {\n"
                                                        "background-color: rgb(149, 166, 174); \n"
                                                        "    font: 75 8pt \"Arial Black\";\n"
                                                        "}\n"
                                                        "\n"
                                                        "QMenu::item {\n"
                                                        "background-color: transparent;\n"
                                                        "}\n"
                                                        "\n"
                                                        "QMenu::item:selected {\n"
                                                        "background-color: #fac983; /* rot */\n"
                                                        "}\n"
                                                        "QWidget{background-color: rgba(255, 218, 144, 80);\n"
                                                        "border-radius: 10px;}")
        self.managerExhibitionTableWidget.setObjectName("managerExhibitionTableWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.managerExhibitionTableWidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.exhibitionTable = QtWidgets.QTableWidget(self.managerExhibitionTableWidget)
        self.exhibitionTable.setStyleSheet("\n"
                                           "QTableWidgetItem {\n"
                                           "    font: 8pt \"Arial\";\n"
                                           "}\n"
                                           "\n"
                                           "QWidget {background-color: rgb(255, 245, 183);}\n"
                                           "\n"
                                           "QAbstractItemView {\n"
                                           "\n"
                                           "    font: 8pt \"Arial Black\";\n"
                                           "}\n"
                                           "\n"
                                           "QAbstractScrollArea {\n"
                                           "    \n"
                                           "    border-radius: 10px;\n"
                                           "}\n"
                                           "\n"
                                           " QScrollBar::handle:vertical {\n"
                                           "    background: #fac983\n"
                                           " }\n"
                                           "\n"
                                           "QScrollBar::handle:horizontal {\n"
                                           "    background: #fac983;\n"
                                           " }\n"
                                           "")
        self.exhibitionTable.setColumnCount(5)
        self.exhibitionTable.setObjectName("exhibitionTable")
        self.exhibitionTable.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.exhibitionTable.setHorizontalHeaderItem(4, item)
        self.exhibitionTable.horizontalHeader().setCascadingSectionResizes(False)
        self.exhibitionTable.horizontalHeader().setDefaultSectionSize(115)
        self.exhibitionTable.horizontalHeader().setStretchLastSection(True)
        self.exhibitionTable.verticalHeader().setSortIndicatorShown(False)
        self.exhibitionTable.verticalHeader().setStretchLastSection(False)
        self.horizontalLayout_5.addWidget(self.exhibitionTable)
        self.exhibitionTableEdit = QtWidgets.QVBoxLayout()
        self.exhibitionTableEdit.setObjectName("exhibitionTableEdit")
        spacerItem1 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.exhibitionTableEdit.addItem(spacerItem1)
        self.editExhibitionButton = QtWidgets.QPushButton(self.managerExhibitionTableWidget)
        self.editExhibitionButton.setEnabled(False)
        self.editExhibitionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.editExhibitionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.editExhibitionButton.setStyleSheet("QWidget {\n"
                                                "    background-color: rgb(250, 234, 153);\n"
                                                "    border: 1px solid rgb(250, 201, 131);\n"
                                                "    border-radius: 10px;\n"
                                                "    text-align: center;\n"
                                                "}\n"
                                                "\n"
                                                "QAbstractButton {\n"
                                                "    \n"
                                                "    font: 87 8pt \"Arial Black\";\n"
                                                "    color: rgb(82, 30, 1);\n"
                                                "}\n"
                                                "QPushButton:hover:!pressed {\n"
                                                "  border: 2px solid rga(250, 201, 131);\n"
                                                "}\n"
                                                "\n"
                                                "\n"
                                                "\n"
                                                "QPushButton:!enabled {\n"
                                                "    \n"
                                                "    background: rgba(160, 160, 160, 100);\n"
                                                "    font: 87 8pt \"Arial Black\";\n"
                                                "    border: 1px solid rgb(150, 150, 150);\n"
                                                "    border-radius: 10px;\n"
                                                "    color: rgba(82, 30, 1, 100);\n"
                                                "}")
        self.editExhibitionButton.setObjectName("editExhibitionButton")
        self.exhibitionTableEdit.addWidget(self.editExhibitionButton)
        self.addExhibitionButton = QtWidgets.QPushButton(self.managerExhibitionTableWidget)
        self.addExhibitionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.addExhibitionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.addExhibitionButton.setStyleSheet("QWidget {\n"
                                               "    background-color: rgb(250, 234, 153);\n"
                                               "    border: 1px solid rgb(250, 201, 131);\n"
                                               "    border-radius: 10px;\n"
                                               "    text-align: center;\n"
                                               "}\n"
                                               "\n"
                                               "QAbstractButton {\n"
                                               "    \n"
                                               "    font: 87 8pt \"Arial Black\";\n"
                                               "    color: rgb(82, 30, 1);\n"
                                               "}\n"
                                               "QPushButton:hover:!pressed {\n"
                                               "  border: 2px solid rgb(250, 201, 131);\n"
                                               "}")
        self.addExhibitionButton.setObjectName("addExhibitionButton")
        self.exhibitionTableEdit.addWidget(self.addExhibitionButton)
        self.deleteExhibitionButton = QtWidgets.QPushButton(self.managerExhibitionTableWidget)
        self.deleteExhibitionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.deleteExhibitionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.deleteExhibitionButton.setStyleSheet("QWidget {\n"
                                                  "    background-color: rgb(250, 234, 153);\n"
                                                  "    border: 1px solid rgb(250, 201, 131);\n"
                                                  "    border-radius: 10px;\n"
                                                  "    text-align: center;\n"
                                                  "}\n"
                                                  "\n"
                                                  "QAbstractButton {\n"
                                                  "    \n"
                                                  "    font: 87 8pt \"Arial Black\";\n"
                                                  "    color: rgb(82, 30, 1);\n"
                                                  "}\n"
                                                  "QPushButton:hover:!pressed {\n"
                                                  "  border: 2px solid rgb(250, 201, 131);\n"
                                                  "}")
        self.deleteExhibitionButton.setObjectName("deleteExhibitionButton")
        self.exhibitionTableEdit.addWidget(self.deleteExhibitionButton)
        self.findExhibitionButton = QtWidgets.QPushButton(self.managerExhibitionTableWidget)
        self.findExhibitionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.findExhibitionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.findExhibitionButton.setStyleSheet("QWidget {\n"
                                                "    background-color: rgb(250, 234, 153);\n"
                                                "    border: 1px solid rgb(250, 201, 131);\n"
                                                "    border-radius: 10px;\n"
                                                "    text-align: center;\n"
                                                "}\n"
                                                "\n"
                                                "QAbstractButton {\n"
                                                "    \n"
                                                "    font: 87 8pt \"Arial Black\";\n"
                                                "    color: rgb(82, 30, 1);\n"
                                                "}\n"
                                                "QPushButton:hover:!pressed {\n"
                                                "  border: 2px solid rgb(250, 201, 131);\n"
                                                "}")
        self.findExhibitionButton.setObjectName("findExhibitionButton")
        self.exhibitionTableEdit.addWidget(self.findExhibitionButton)
        spacerItem2 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.exhibitionTableEdit.addItem(spacerItem2)
        self.horizontalLayout_5.addLayout(self.exhibitionTableEdit)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.openExhibitionCalendarButton = QtWidgets.QPushButton(self.managerExhibitionTableWidget)
        self.openExhibitionCalendarButton.setMinimumSize(QtCore.QSize(100, 31))
        self.openExhibitionCalendarButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.openExhibitionCalendarButton.setStyleSheet("QWidget {\n"
                                                        "    background-color: rgb(250, 234, 153);\n"
                                                        "    border: 1px solid rgb(250, 201, 131);\n"
                                                        "    border-radius: 10px;\n"
                                                        "    text-align: center;\n"
                                                        "}\n"
                                                        "\n"
                                                        "QAbstractButton {\n"
                                                        "    \n"
                                                        "    font: 87 8pt \"Arial Black\";\n"
                                                        "    color: rgb(82, 30, 1);\n"
                                                        "}\n"
                                                        "QPushButton:hover:!pressed {\n"
                                                        "  border: 2px solid rgb(250, 201, 131);\n"
                                                        "}")
        self.openExhibitionCalendarButton.setObjectName("openExhibitionCalendarButton")
        self.verticalLayout.addWidget(self.openExhibitionCalendarButton)
        self.verticalLayout_2.addWidget(self.managerExhibitionTableWidget)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.exhibitonLabel_2 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exhibitonLabel_2.sizePolicy().hasHeightForWidth())
        self.exhibitonLabel_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.exhibitonLabel_2.setFont(font)
        self.exhibitonLabel_2.setStyleSheet("QLabel {\n"
                                            "    font: 87 12pt \"Arial Black\";\n"
                                            "    color: rgb(82, 30, 1);\n"
                                            "}")
        self.exhibitonLabel_2.setAlignment(QtCore.Qt.AlignCenter)
        self.exhibitonLabel_2.setObjectName("exhibitonLabel_2")
        self.horizontalLayout_6.addWidget(self.exhibitonLabel_2)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem3)
        self.setVisibleExcursionTableButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setVisibleExcursionTableButton.sizePolicy().hasHeightForWidth())
        self.setVisibleExcursionTableButton.setSizePolicy(sizePolicy)
        self.setVisibleExcursionTableButton.setMinimumSize(QtCore.QSize(40, 40))
        self.setVisibleExcursionTableButton.setStyleSheet("\n"
                                                          "\n"
                                                          "QWidget {\n"
                                                          "    border 1px solid;\n"
                                                          "    border-radius: 20px;\n"
                                                          "    background-color: transparent;\n"
                                                          "    \n"
                                                          "}\n"
                                                          "\n"
                                                          "QPushButton {\n"
                                                          "    border-radius: 20px;\n"
                                                          "    border-style: outset;\n"
                                                          "\n"
                                                          "}\n"
                                                          "\n"
                                                          "QPushButton:hover {\n"
                                                          "    background: qradialgradient(\n"
                                                          "        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
                                                          "        radius: 1.35, stop: 0.7 #faea99, stop: 1 #521e01\n"
                                                          "        );\n"
                                                          "    }\n"
                                                          "\n"
                                                          "QPushButton:pressed {\n"
                                                          "    border-style: inset;\n"
                                                          "    background: qradialgradient(\n"
                                                          "        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,\n"
                                                          "        radius: 1.35, stop: 0 #fff, stop: 1 #521e01\n"
                                                          "        );\n"
                                                          "    }")
        self.setVisibleExcursionTableButton.setText("")
        self.setVisibleExcursionTableButton.setIcon(icon)
        self.setVisibleExcursionTableButton.setIconSize(QtCore.QSize(40, 40))
        self.setVisibleExcursionTableButton.setObjectName("setVisibleExcursionTableButton")
        self.horizontalLayout_6.addWidget(self.setVisibleExcursionTableButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)
        self.managerExcursionTableWidget = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.managerExcursionTableWidget.setMinimumSize(QtCore.QSize(0, 236))
        self.managerExcursionTableWidget.setStyleSheet("QMenuBar {\n"
                                                       "background-color: rgb(250, 234, 153);\n"
                                                       "font: 87 10pt \"Arial Black\";\n"
                                                       "padding-left: 3px;\n"
                                                       "    color: rgb(82, 30, 1);\n"
                                                       "}\n"
                                                       "\n"
                                                       "QMenuBar::item {\n"
                                                       "spacing: 3px; /* spacing between menu bar items */\n"
                                                       "padding: 1px 4px;\n"
                                                       "background: transparent;\n"
                                                       "border-radius: 4px;\n"
                                                       "background-color: rgb(250, 234, 153);\n"
                                                       "}\n"
                                                       "\n"
                                                       "QMenuBar::item:selected { /* when selected using mouse or keyboard */\n"
                                                       "background: #fac983;\n"
                                                       "}\n"
                                                       "\n"
                                                       "QMenu {\n"
                                                       "background-color: rgb(149, 166, 174); \n"
                                                       "    font: 75 8pt \"Arial Black\";\n"
                                                       "}\n"
                                                       "\n"
                                                       "QMenu::item {\n"
                                                       "background-color: transparent;\n"
                                                       "}\n"
                                                       "\n"
                                                       "QMenu::item:selected {\n"
                                                       "background-color: #fac983; /* rot */\n"
                                                       "}\n"
                                                       "QWidget{background-color: rgba(255, 218, 144, 80);\n"
                                                       "border-radius: 10px;}")
        self.managerExcursionTableWidget.setObjectName("managerExcursionTableWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.managerExcursionTableWidget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.excursionTable = QtWidgets.QTableWidget(self.managerExcursionTableWidget)
        self.excursionTable.setStyleSheet("\n"
                                          "QTableWidgetItem {\n"
                                          "    font: 8pt \"Arial\";\n"
                                          "}\n"
                                          "\n"
                                          "QWidget {background-color: rgb(255, 245, 183);}\n"
                                          "\n"
                                          "QAbstractItemView {\n"
                                          "\n"
                                          "    font: 8pt \"Arial Black\";\n"
                                          "}\n"
                                          "\n"
                                          "QAbstractScrollArea {\n"
                                          "    \n"
                                          "    border-radius: 10px;\n"
                                          "}\n"
                                          "\n"
                                          " QScrollBar::handle:vertical {\n"
                                          "    background: #fac983\n"
                                          " }\n"
                                          "\n"
                                          "QScrollBar::handle:horizontal {\n"
                                          "    background: #fac983;\n"
                                          " }\n"
                                          "")
        self.excursionTable.setColumnCount(4)
        self.excursionTable.setObjectName("excursionTable")
        self.excursionTable.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.excursionTable.setHorizontalHeaderItem(3, item)
        self.excursionTable.horizontalHeader().setCascadingSectionResizes(False)
        self.excursionTable.horizontalHeader().setDefaultSectionSize(115)
        self.excursionTable.horizontalHeader().setStretchLastSection(True)
        self.excursionTable.verticalHeader().setSortIndicatorShown(False)
        self.excursionTable.verticalHeader().setStretchLastSection(False)
        self.horizontalLayout_7.addWidget(self.excursionTable)
        self.excursionTableEdit = QtWidgets.QVBoxLayout()
        self.excursionTableEdit.setObjectName("excursionTableEdit")
        spacerItem4 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.excursionTableEdit.addItem(spacerItem4)
        self.editExcursionButton = QtWidgets.QPushButton(self.managerExcursionTableWidget)
        self.editExcursionButton.setEnabled(False)
        self.editExcursionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.editExcursionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.editExcursionButton.setStyleSheet("QWidget {\n"
                                               "    background-color: rgb(250, 234, 153);\n"
                                               "    border: 1px solid rgb(250, 201, 131);\n"
                                               "    border-radius: 10px;\n"
                                               "    text-align: center;\n"
                                               "}\n"
                                               "\n"
                                               "QAbstractButton {\n"
                                               "    \n"
                                               "    font: 87 8pt \"Arial Black\";\n"
                                               "    color: rgb(82, 30, 1);\n"
                                               "}\n"
                                               "QPushButton:hover:!pressed {\n"
                                               "  border: 2px solid rga(250, 201, 131);\n"
                                               "}\n"
                                               "\n"
                                               "\n"
                                               "\n"
                                               "QPushButton:!enabled {\n"
                                               "    \n"
                                               "    background: rgba(160, 160, 160, 100);\n"
                                               "    font: 87 8pt \"Arial Black\";\n"
                                               "    border: 1px solid rgb(150, 150, 150);\n"
                                               "    border-radius: 10px;\n"
                                               "    color: rgba(82, 30, 1, 100);\n"
                                               "}")
        self.editExcursionButton.setObjectName("editExcursionButton")
        self.excursionTableEdit.addWidget(self.editExcursionButton)
        self.addExcursionButton = QtWidgets.QPushButton(self.managerExcursionTableWidget)
        self.addExcursionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.addExcursionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.addExcursionButton.setStyleSheet("QWidget {\n"
                                              "    background-color: rgb(250, 234, 153);\n"
                                              "    border: 1px solid rgb(250, 201, 131);\n"
                                              "    border-radius: 10px;\n"
                                              "    text-align: center;\n"
                                              "}\n"
                                              "\n"
                                              "QAbstractButton {\n"
                                              "    \n"
                                              "    font: 87 8pt \"Arial Black\";\n"
                                              "    color: rgb(82, 30, 1);\n"
                                              "}\n"
                                              "QPushButton:hover:!pressed {\n"
                                              "  border: 2px solid rgb(250, 201, 131);\n"
                                              "}")
        self.addExcursionButton.setObjectName("addExcursionButton")
        self.excursionTableEdit.addWidget(self.addExcursionButton)
        self.deleteExcursionButton = QtWidgets.QPushButton(self.managerExcursionTableWidget)
        self.deleteExcursionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.deleteExcursionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.deleteExcursionButton.setStyleSheet("QWidget {\n"
                                                 "    background-color: rgb(250, 234, 153);\n"
                                                 "    border: 1px solid rgb(250, 201, 131);\n"
                                                 "    border-radius: 10px;\n"
                                                 "    text-align: center;\n"
                                                 "}\n"
                                                 "\n"
                                                 "QAbstractButton {\n"
                                                 "    \n"
                                                 "    font: 87 8pt \"Arial Black\";\n"
                                                 "    color: rgb(82, 30, 1);\n"
                                                 "}\n"
                                                 "QPushButton:hover:!pressed {\n"
                                                 "  border: 2px solid rgb(250, 201, 131);\n"
                                                 "}")
        self.deleteExcursionButton.setObjectName("deleteExcursionButton")
        self.excursionTableEdit.addWidget(self.deleteExcursionButton)
        self.findExcursionButton = QtWidgets.QPushButton(self.managerExcursionTableWidget)
        self.findExcursionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.findExcursionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.findExcursionButton.setStyleSheet("QWidget {\n"
                                               "    background-color: rgb(250, 234, 153);\n"
                                               "    border: 1px solid rgb(250, 201, 131);\n"
                                               "    border-radius: 10px;\n"
                                               "    text-align: center;\n"
                                               "}\n"
                                               "\n"
                                               "QAbstractButton {\n"
                                               "    \n"
                                               "    font: 87 8pt \"Arial Black\";\n"
                                               "    color: rgb(82, 30, 1);\n"
                                               "}\n"
                                               "QPushButton:hover:!pressed {\n"
                                               "  border: 2px solid rgb(250, 201, 131);\n"
                                               "}")
        self.findExcursionButton.setObjectName("findExcursionButton")
        self.excursionTableEdit.addWidget(self.findExcursionButton)
        spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.excursionTableEdit.addItem(spacerItem5)
        self.horizontalLayout_7.addLayout(self.excursionTableEdit)
        self.verticalLayout_3.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.allExhibitionLabel = QtWidgets.QLabel(self.managerExcursionTableWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.allExhibitionLabel.sizePolicy().hasHeightForWidth())
        self.allExhibitionLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.allExhibitionLabel.setFont(font)
        self.allExhibitionLabel.setStyleSheet("QLabel {\n"
                                              "    font: 87 12pt \"Arial Black\";\n"
                                              "    color: rgb(82, 30, 1);\n"
                                              "}")
        self.allExhibitionLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.allExhibitionLabel.setObjectName("allExhibitionLabel")
        self.horizontalLayout_8.addWidget(self.allExhibitionLabel)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem6)
        self.setVisibleAllExhibitionTableButton = QtWidgets.QPushButton(self.managerExcursionTableWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setVisibleAllExhibitionTableButton.sizePolicy().hasHeightForWidth())
        self.setVisibleAllExhibitionTableButton.setSizePolicy(sizePolicy)
        self.setVisibleAllExhibitionTableButton.setMinimumSize(QtCore.QSize(40, 40))
        self.setVisibleAllExhibitionTableButton.setStyleSheet("\n"
                                                              "\n"
                                                              "QWidget {\n"
                                                              "    border 1px solid;\n"
                                                              "    border-radius: 20px;\n"
                                                              "    background-color: transparent;\n"
                                                              "    \n"
                                                              "}\n"
                                                              "\n"
                                                              "QPushButton {\n"
                                                              "    border-radius: 20px;\n"
                                                              "    border-style: outset;\n"
                                                              "\n"
                                                              "}\n"
                                                              "\n"
                                                              "QPushButton:hover {\n"
                                                              "    background: qradialgradient(\n"
                                                              "        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
                                                              "        radius: 1.35, stop: 0.7 #faea99, stop: 1 #521e01\n"
                                                              "        );\n"
                                                              "    }\n"
                                                              "\n"
                                                              "QPushButton:pressed {\n"
                                                              "    border-style: inset;\n"
                                                              "    background: qradialgradient(\n"
                                                              "        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,\n"
                                                              "        radius: 1.35, stop: 0 #fff, stop: 1 #521e01\n"
                                                              "        );\n"
                                                              "    }")
        self.setVisibleAllExhibitionTableButton.setText("")
        self.setVisibleAllExhibitionTableButton.setIcon(icon)
        self.setVisibleAllExhibitionTableButton.setIconSize(QtCore.QSize(40, 40))
        self.setVisibleAllExhibitionTableButton.setObjectName("setVisibleAllExhibitionTableButton")
        self.horizontalLayout_8.addWidget(self.setVisibleAllExhibitionTableButton)
        self.verticalLayout_3.addLayout(self.horizontalLayout_8)
        self.managerAllExhibitionTableWidget = QtWidgets.QWidget(self.managerExcursionTableWidget)
        self.managerAllExhibitionTableWidget.setMinimumSize(QtCore.QSize(0, 236))
        self.managerAllExhibitionTableWidget.setStyleSheet("QMenuBar {\n"
                                                          "background-color: rgb(250, 234, 153);\n"
                                                          "font: 87 10pt \"Arial Black\";\n"
                                                          "padding-left: 3px;\n"
                                                          "    color: rgb(82, 30, 1);\n"
                                                          "}\n"
                                                          "\n"
                                                          "QMenuBar::item {\n"
                                                          "spacing: 3px; /* spacing between menu bar items */\n"
                                                          "padding: 1px 4px;\n"
                                                          "background: transparent;\n"
                                                          "border-radius: 4px;\n"
                                                          "background-color: rgb(250, 234, 153);\n"
                                                          "}\n"
                                                          "\n"
                                                          "QMenuBar::item:selected { /* when selected using mouse or keyboard */\n"
                                                          "background: #fac983;\n"
                                                          "}\n"
                                                          "\n"
                                                          "QMenu {\n"
                                                          "background-color: rgb(149, 166, 174); \n"
                                                          "    font: 75 8pt \"Arial Black\";\n"
                                                          "}\n"
                                                          "\n"
                                                          "QMenu::item {\n"
                                                          "background-color: transparent;\n"
                                                          "}\n"
                                                          "\n"
                                                          "QMenu::item:selected {\n"
                                                          "background-color: #fac983; /* rot */\n"
                                                          "}\n"
                                                          "QWidget{background-color: rgba(255, 218, 144, 80);\n"
                                                          "border-radius: 10px;}")
        self.managerAllExhibitionTableWidget.setObjectName("managerExhibitionTableWidget_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.managerAllExhibitionTableWidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.allExhibitionTable = QtWidgets.QTableWidget(self.managerAllExhibitionTableWidget)
        self.allExhibitionTable.setStyleSheet("\n"
                                              "QTableWidgetItem {\n"
                                              "    font: 8pt \"Arial\";\n"
                                              "}\n"
                                              "\n"
                                              "QWidget {background-color: rgb(255, 245, 183);}\n"
                                              "\n"
                                              "QAbstractItemView {\n"
                                              "\n"
                                              "    font: 8pt \"Arial Black\";\n"
                                              "}\n"
                                              "\n"
                                              "QAbstractScrollArea {\n"
                                              "    \n"
                                              "    border-radius: 10px;\n"
                                              "}\n"
                                              "\n"
                                              " QScrollBar::handle:vertical {\n"
                                              "    background: #fac983\n"
                                              " }\n"
                                              "\n"
                                              "QScrollBar::handle:horizontal {\n"
                                              "    background: #fac983;\n"
                                              " }\n"
                                              "")
        self.horizontalLayout_9.addWidget(self.allExhibitionTable)
        self.exhibitionTableEdit_2 = QtWidgets.QVBoxLayout()
        self.exhibitionTableEdit_2.setObjectName("exhibitionTableEdit_2")
        spacerItem7 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.exhibitionTableEdit_2.addItem(spacerItem7)
        self.findAllExhibitionButton = QtWidgets.QPushButton(self.managerAllExhibitionTableWidget)
        self.findAllExhibitionButton.setMinimumSize(QtCore.QSize(100, 31))
        self.findAllExhibitionButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.findAllExhibitionButton.setStyleSheet("QWidget {\n"
                                                   "    background-color: rgb(250, 234, 153);\n"
                                                   "    border: 1px solid rgb(250, 201, 131);\n"
                                                   "    border-radius: 10px;\n"
                                                   "    text-align: center;\n"
                                                   "}\n"
                                                   "\n"
                                                   "QAbstractButton {\n"
                                                   "    \n"
                                                   "    font: 87 8pt \"Arial Black\";\n"
                                                   "    color: rgb(82, 30, 1);\n"
                                                   "}\n"
                                                   "QPushButton:hover:!pressed {\n"
                                                   "  border: 2px solid rgb(250, 201, 131);\n"
                                                   "}")
        self.findAllExhibitionButton.setObjectName("findAllExhibitionButton")
        self.exhibitionTableEdit_2.addWidget(self.findAllExhibitionButton)
        spacerItem8 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.exhibitionTableEdit_2.addItem(spacerItem8)
        self.horizontalLayout_9.addLayout(self.exhibitionTableEdit_2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_9)
        self.verticalLayout_3.addWidget(self.managerAllExhibitionTableWidget)
        self.verticalLayout_2.addWidget(self.managerExcursionTableWidget)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_5.addWidget(self.scrollArea)
        ManagerMainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ManagerMainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 830, 21))
        self.menubar.setObjectName("menubar")
        self.profileMenu = QtWidgets.QMenu(self.menubar)
        self.profileMenu.setObjectName("profileMenu")
        self.exhibitionMenu = QtWidgets.QMenu(self.menubar)
        self.exhibitionMenu.setObjectName("exhibitionMenu")
        self.excursionMenu = QtWidgets.QMenu(self.menubar)
        self.excursionMenu.setObjectName("excursionMenu")
        ManagerMainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(ManagerMainWindow)
        self.statusbar.setObjectName("statusbar")
        ManagerMainWindow.setStatusBar(self.statusbar)
        self.selectEmployeeTableAction = QtWidgets.QAction(ManagerMainWindow)
        self.selectEmployeeTableAction.setCheckable(True)
        self.selectEmployeeTableAction.setChecked(True)
        self.selectEmployeeTableAction.setObjectName("selectEmployeeTableAction")
        self.action = QtWidgets.QAction(ManagerMainWindow)
        self.action.setObjectName("action")
        self.viewProfileInfoAction = QtWidgets.QAction(ManagerMainWindow)
        self.viewProfileInfoAction.setObjectName("viewProfileInfoAction")
        self.quitSessionAction = QtWidgets.QAction(ManagerMainWindow)
        self.quitSessionAction.setObjectName("quitSessionAction")
        self.selectExhibitionTableAction = QtWidgets.QAction(ManagerMainWindow)
        self.selectExhibitionTableAction.setCheckable(True)
        self.selectExhibitionTableAction.setChecked(True)
        self.selectExhibitionTableAction.setObjectName("selectExhibitionTableAction")
        self.addExhibitionTableAction = QtWidgets.QAction(ManagerMainWindow)
        self.addExhibitionTableAction.setObjectName("addExhibitionTableAction")
        self.deleteExhibitionTableAction = QtWidgets.QAction(ManagerMainWindow)
        self.deleteExhibitionTableAction.setObjectName("deleteExhibitionTableAction")
        self.findExhibitionTableAction = QtWidgets.QAction(ManagerMainWindow)
        self.findExhibitionTableAction.setObjectName("findExhibitionTableAction")
        self.selectExcursionTableAction = QtWidgets.QAction(ManagerMainWindow)
        self.selectExcursionTableAction.setCheckable(True)
        self.selectExcursionTableAction.setChecked(True)
        self.selectExcursionTableAction.setObjectName("selectExcursionTableAction")
        self.addExcursionAction = QtWidgets.QAction(ManagerMainWindow)
        self.addExcursionAction.setObjectName("addExcursionAction")
        self.removeExcursionAction = QtWidgets.QAction(ManagerMainWindow)
        self.removeExcursionAction.setObjectName("removeExcursionAction")
        self.findExcursionAction = QtWidgets.QAction(ManagerMainWindow)
        self.findExcursionAction.setObjectName("findExcursionAction")
        self.profileMenu.addAction(self.viewProfileInfoAction)
        self.profileMenu.addAction(self.quitSessionAction)
        self.exhibitionMenu.addAction(self.selectExhibitionTableAction)
        self.exhibitionMenu.addSeparator()
        self.exhibitionMenu.addAction(self.addExhibitionTableAction)
        self.exhibitionMenu.addAction(self.deleteExhibitionTableAction)
        self.exhibitionMenu.addAction(self.findExhibitionTableAction)
        self.excursionMenu.addAction(self.selectExcursionTableAction)
        self.excursionMenu.addSeparator()
        self.excursionMenu.addAction(self.addExcursionAction)
        self.excursionMenu.addAction(self.removeExcursionAction)
        self.excursionMenu.addAction(self.findExcursionAction)
        self.menubar.addAction(self.profileMenu.menuAction())
        self.menubar.addAction(self.exhibitionMenu.menuAction())
        self.menubar.addAction(self.excursionMenu.menuAction())

        self.retranslateUi(ManagerMainWindow)
        QtCore.QMetaObject.connectSlotsByName(ManagerMainWindow)

    def retranslateUi(self, ManagerMainWindow):
        _translate = QtCore.QCoreApplication.translate
        ManagerMainWindow.setWindowTitle(_translate("ManagerMainWindow", "Главное окно - (Менеджер)"))
        self.exhibitonLabel.setText(_translate("ManagerMainWindow", "Ваши выставки"))
        self.exhibitionTable.setSortingEnabled(True)
        item = self.exhibitionTable.verticalHeaderItem(0)
        item.setText(_translate("ManagerMainWindow", "1"))
        item = self.exhibitionTable.verticalHeaderItem(1)
        item.setText(_translate("ManagerMainWindow", "2"))
        item = self.exhibitionTable.verticalHeaderItem(2)
        item.setText(_translate("ManagerMainWindow", "3"))
        item = self.exhibitionTable.verticalHeaderItem(3)
        item.setText(_translate("ManagerMainWindow", "4"))
        item = self.exhibitionTable.verticalHeaderItem(4)
        item.setText(_translate("ManagerMainWindow", "5"))
        item = self.exhibitionTable.horizontalHeaderItem(0)
        item.setText(_translate("ManagerMainWindow", "Название"))
        item = self.exhibitionTable.horizontalHeaderItem(1)
        item.setText(_translate("ManagerMainWindow", "Описание"))
        item = self.exhibitionTable.horizontalHeaderItem(2)
        item.setText(_translate("ManagerMainWindow", "Площадь"))
        item = self.exhibitionTable.horizontalHeaderItem(3)
        item.setText(_translate("ManagerMainWindow", "Дата начала"))
        item = self.exhibitionTable.horizontalHeaderItem(4)
        item.setText(_translate("ManagerMainWindow", "Дата окончания"))
        self.editExhibitionButton.setText(_translate("ManagerMainWindow", "Редактировать"))
        self.addExhibitionButton.setText(_translate("ManagerMainWindow", "Добавить выставку"))
        self.deleteExhibitionButton.setText(_translate("ManagerMainWindow", "Удалить выставку"))
        self.findExhibitionButton.setText(_translate("ManagerMainWindow", "Поиск"))
        self.openExhibitionCalendarButton.setText(_translate("ManagerMainWindow", "Открыть календарь выставок"))
        self.exhibitonLabel_2.setText(_translate("ManagerMainWindow", "Ваши экскурсии"))
        self.excursionTable.setSortingEnabled(True)
        item = self.excursionTable.verticalHeaderItem(0)
        item.setText(_translate("ManagerMainWindow", "1"))
        item = self.excursionTable.verticalHeaderItem(1)
        item.setText(_translate("ManagerMainWindow", "2"))
        item = self.excursionTable.verticalHeaderItem(2)
        item.setText(_translate("ManagerMainWindow", "3"))
        item = self.excursionTable.verticalHeaderItem(3)
        item.setText(_translate("ManagerMainWindow", "4"))
        item = self.excursionTable.verticalHeaderItem(4)
        item.setText(_translate("ManagerMainWindow", "5"))
        item = self.excursionTable.horizontalHeaderItem(0)
        item.setText(_translate("ManagerMainWindow", "Название"))
        item = self.excursionTable.horizontalHeaderItem(1)
        item.setText(_translate("ManagerMainWindow", "Описание"))
        item = self.excursionTable.horizontalHeaderItem(2)
        item.setText(_translate("ManagerMainWindow", "Назначенный экскурсовод"))
        item = self.excursionTable.horizontalHeaderItem(3)
        item.setText(_translate("ManagerMainWindow", "Стоимость"))
        self.editExcursionButton.setText(_translate("ManagerMainWindow", "Редактировать"))
        self.addExcursionButton.setText(_translate("ManagerMainWindow", "Добавить экскурсию"))
        self.deleteExcursionButton.setText(_translate("ManagerMainWindow", "Удалить экскурсию"))
        self.findExcursionButton.setText(_translate("ManagerMainWindow", "Поиск"))
        self.allExhibitionLabel.setText(_translate("ManagerMainWindow", "Все выставки"))
        self.allExhibitionTable.setSortingEnabled(True)
        item = self.allExhibitionTable.verticalHeaderItem(0)
        item.setText(_translate("ManagerMainWindow", "1"))
        item = self.allExhibitionTable.verticalHeaderItem(1)
        item.setText(_translate("ManagerMainWindow", "2"))
        item = self.allExhibitionTable.verticalHeaderItem(2)
        item.setText(_translate("ManagerMainWindow", "3"))
        item = self.allExhibitionTable.verticalHeaderItem(3)
        item.setText(_translate("ManagerMainWindow", "4"))
        item = self.allExhibitionTable.verticalHeaderItem(4)
        item.setText(_translate("ManagerMainWindow", "5"))
        item = self.allExhibitionTable.horizontalHeaderItem(0)
        item.setText(_translate("ManagerMainWindow", "Название"))
        item = self.allExhibitionTable.horizontalHeaderItem(1)
        item.setText(_translate("ManagerMainWindow", "Описание"))
        item = self.allExhibitionTable.horizontalHeaderItem(2)
        item.setText(_translate("ManagerMainWindow", "Площадь"))
        item = self.allExhibitionTable.horizontalHeaderItem(3)
        item.setText(_translate("ManagerMainWindow", "Дата начала"))
        item = self.allExhibitionTable.horizontalHeaderItem(4)
        item.setText(_translate("ManagerMainWindow", "Дата окончания"))
        self.findAllExhibitionButton.setText(_translate("ManagerMainWindow", "Поиск"))
        self.profileMenu.setTitle(_translate("ManagerMainWindow", "Профиль"))
        self.exhibitionMenu.setTitle(_translate("ManagerMainWindow", "Выстаки"))
        self.excursionMenu.setTitle(_translate("ManagerMainWindow", "Экскурсии"))
        self.selectEmployeeTableAction.setText(_translate("ManagerMainWindow", "Выбрать"))
        self.action.setText(_translate("ManagerMainWindow", "Поиск..."))
        self.viewProfileInfoAction.setText(_translate("ManagerMainWindow", "Показать"))
        self.quitSessionAction.setText(_translate("ManagerMainWindow", "Выход"))
        self.quitSessionAction.setShortcut(_translate("ManagerMainWindow", "Ctrl+Q"))
        self.selectExhibitionTableAction.setText(_translate("ManagerMainWindow", "Выбрать"))
        self.selectExhibitionTableAction.setShortcut(_translate("ManagerMainWindow", "F1"))
        self.addExhibitionTableAction.setText(_translate("ManagerMainWindow", "Добавить"))
        self.addExhibitionTableAction.setShortcut(_translate("ManagerMainWindow", "Ctrl+N"))
        self.deleteExhibitionTableAction.setText(_translate("ManagerMainWindow", "Удалить"))
        self.deleteExhibitionTableAction.setShortcut(_translate("ManagerMainWindow", "Alt+D"))
        self.findExhibitionTableAction.setText(_translate("ManagerMainWindow", "Поиск..."))
        self.findExhibitionTableAction.setShortcut(_translate("ManagerMainWindow", "Ctrl+F"))
        self.selectExcursionTableAction.setText(_translate("ManagerMainWindow", "Выбрать"))
        self.selectExcursionTableAction.setShortcut(_translate("ManagerMainWindow", "F2"))
        self.addExcursionAction.setText(_translate("ManagerMainWindow", "Добавить"))
        self.addExcursionAction.setShortcut(_translate("ManagerMainWindow", "Ctrl+N"))
        self.removeExcursionAction.setText(_translate("ManagerMainWindow", "Удалить"))
        self.removeExcursionAction.setShortcut(_translate("ManagerMainWindow", "Alt+D"))
        self.findExcursionAction.setText(_translate("ManagerMainWindow", "Поиск"))
        self.findExcursionAction.setShortcut(_translate("ManagerMainWindow", "Ctrl+F"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    ManagerMainWindow = QtWidgets.QMainWindow()
    ui = Ui_ManagerMainWindow()
    ui.setupUi(ManagerMainWindow)
    ManagerMainWindow.show()
    sys.exit(app.exec_())
