# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AdministratorWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from src.SharedWidgets.MuseTableWidget import MuseTableWidget


class AdministratorMainWindowView(object):
    def setupUi(self, AdministratorMainWindow):
        AdministratorMainWindow.setObjectName("AdministratorMainWindow")
        AdministratorMainWindow.resize(979, 968)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(AdministratorMainWindow.sizePolicy().hasHeightForWidth())
        AdministratorMainWindow.setSizePolicy(sizePolicy)
        AdministratorMainWindow.setStyleSheet("QMenuBar {\n"
                                              "background-color: rgb(250, 234, 153);\n"
                                              "font: 87 10pt \"Arial Black\";\n"
                                              "padding-left: 3px;\n"
                                              "    color: rgb(82, 30, 1);\n"
                                              "}\n"
                                              "\n"
                                              "QMenuBar::item {\n"
                                              "spacing: 3px; /* spacing between menu bar items */\n"
                                              "padding: 1px 4px;\n"
                                              "background: transparent;\n"
                                              "border-radius: 4px;\n"
                                              "background-color: rgb(250, 234, 153);\n"
                                              "}\n"
                                              "\n"
                                              "QMenuBar::item:selected { /* when selected using mouse or keyboard */\n"
                                              "background: #fac983;\n"
                                              "}\n"
                                              "\n"
                                              "QMenu {\n"
                                              "background-color: rgb(149, 166, 174); \n"
                                              "    font: 75 8pt \"Arial Black\";\n"
                                              "}\n"
                                              "\n"
                                              "QMenu::item {\n"
                                              "background-color: transparent;\n"
                                              "}\n"
                                              "\n"
                                              "QMenu::item:selected {\n"
                                              "background-color: #fac983; /* rot */\n"
                                              "}\n"
                                              "QWidget{background-color: rgb(255, 253, 223);}\n"
                                              "\n"
                                              "")
        self.centralwidget = QtWidgets.QWidget(AdministratorMainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.verticalLayout.addItem(spacerItem)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.employeeLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.employeeLabel.sizePolicy().hasHeightForWidth())
        self.employeeLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.employeeLabel.setFont(font)
        self.employeeLabel.setStyleSheet("QLabel {\n"
                                         "    font: 87 12pt \"Arial Black\";\n"
                                         "    color: rgb(82, 30, 1);\n"
                                         "}")
        self.employeeLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.employeeLabel.setObjectName("employeeLabel")
        self.horizontalLayout_3.addWidget(self.employeeLabel)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.setVisibleEmployeeTableButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setVisibleEmployeeTableButton.sizePolicy().hasHeightForWidth())
        self.setVisibleEmployeeTableButton.setSizePolicy(sizePolicy)
        self.setVisibleEmployeeTableButton.setMinimumSize(QtCore.QSize(40, 40))
        self.setVisibleEmployeeTableButton.setStyleSheet("\n"
                                                         "\n"
                                                         "QWidget {\n"
                                                         "    border 1px solid;\n"
                                                         "    border-radius: 20px;\n"
                                                         "    background-color: transparent;\n"
                                                         "    \n"
                                                         "}\n"
                                                         "\n"
                                                         "QPushButton {\n"
                                                         "    border-radius: 20px;\n"
                                                         "    border-style: outset;\n"
                                                         "\n"
                                                         "}\n"
                                                         "\n"
                                                         "QPushButton:hover {\n"
                                                         "    background: qradialgradient(\n"
                                                         "        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
                                                         "        radius: 1.35, stop: 0.7 #faea99, stop: 1 #521e01\n"
                                                         "        );\n"
                                                         "    }\n"
                                                         "\n"
                                                         "QPushButton:pressed {\n"
                                                         "    border-style: inset;\n"
                                                         "    background: qradialgradient(\n"
                                                         "        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,\n"
                                                         "        radius: 1.35, stop: 0 #fff, stop: 1 #521e01\n"
                                                         "        );\n"
                                                         "    }")
        self.setVisibleEmployeeTableButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./ui/components/inactive drop button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.setVisibleEmployeeTableButton.setIcon(icon)
        self.setVisibleEmployeeTableButton.setIconSize(QtCore.QSize(40, 40))
        self.setVisibleEmployeeTableButton.setObjectName("setVisibleEmployeeTableButton")
        self.horizontalLayout_3.addWidget(self.setVisibleEmployeeTableButton)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.adminEmployeeTable = QtWidgets.QWidget(self.centralwidget)
        self.adminEmployeeTable.setMinimumSize(QtCore.QSize(291, 321))
        self.adminEmployeeTable.setObjectName("adminEmployeeTable")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.adminEmployeeTable)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.employeeTable = MuseTableWidget({"Фио": MuseTableWidget.ItemType.varchar,
                                              "Должность": MuseTableWidget.ItemType.enumType,
                                              "Дата рождения": MuseTableWidget.ItemType.dateType,
                                              "Номер телефона": MuseTableWidget.ItemType.varchar,
                                              }, parent=self.adminEmployeeTable)

        self.employeeTable.horizontalHeader().setCascadingSectionResizes(False)
        self.employeeTable.horizontalHeader().setDefaultSectionSize(115)
        self.employeeTable.horizontalHeader().setStretchLastSection(True)
        self.employeeTable.verticalHeader().setSortIndicatorShown(False)
        self.employeeTable.verticalHeader().setStretchLastSection(False)
        self.horizontalLayout.addWidget(self.employeeTable)
        self.employeeTableEditLayout = QtWidgets.QVBoxLayout()
        self.employeeTableEditLayout.setObjectName("employeeTableEditLayout")
        spacerItem2 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.employeeTableEditLayout.addItem(spacerItem2)
        self.editEmployeeButton = QtWidgets.QPushButton(self.adminEmployeeTable)
        self.editEmployeeButton.setEnabled(False)
        self.editEmployeeButton.setMinimumSize(QtCore.QSize(100, 31))
        self.editEmployeeButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.editEmployeeButton.setStyleSheet("QWidget {\n"
                                              "    background-color: rgb(250, 234, 153);\n"
                                              "    border: 1px solid rgb(250, 201, 131);\n"
                                              "    border-radius: 10px;\n"
                                              "    text-align: center;\n"
                                              "}\n"
                                              "\n"
                                              "QAbstractButton {\n"
                                              "    \n"
                                              "    font: 87 8pt \"Arial Black\";\n"
                                              "    color: rgb(82, 30, 1);\n"
                                              "}\n"
                                              "QPushButton:hover:!pressed {\n"
                                              "  border: 2px solid rga(250, 201, 131);\n"
                                              "}\n"
                                              "\n"
                                              "\n"
                                              "\n"
                                              "QPushButton:!enabled {\n"
                                              "    \n"
                                              "    background: rgba(160, 160, 160, 100);\n"
                                              "    font: 87 8pt \"Arial Black\";\n"
                                              "    border: 1px solid rgb(150, 150, 150);\n"
                                              "    border-radius: 10px;\n"
                                              "    color: rgba(82, 30, 1, 100);\n"
                                              "}")
        self.editEmployeeButton.setObjectName("editEmployeeButton")
        self.employeeTableEditLayout.addWidget(self.editEmployeeButton)
        self.addEmployeeButton = QtWidgets.QPushButton(self.adminEmployeeTable)
        self.addEmployeeButton.setMinimumSize(QtCore.QSize(100, 31))
        self.addEmployeeButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.addEmployeeButton.setStyleSheet("QWidget {\n"
                                             "    background-color: rgb(250, 234, 153);\n"
                                             "    border: 1px solid rgb(250, 201, 131);\n"
                                             "    border-radius: 10px;\n"
                                             "    text-align: center;\n"
                                             "}\n"
                                             "\n"
                                             "QAbstractButton {\n"
                                             "    \n"
                                             "    font: 87 8pt \"Arial Black\";\n"
                                             "    color: rgb(82, 30, 1);\n"
                                             "}\n"
                                             "QPushButton:hover:!pressed {\n"
                                             "  border: 2px solid rgb(250, 201, 131);\n"
                                             "}")
        self.addEmployeeButton.setObjectName("addEmployeeButton")
        self.employeeTableEditLayout.addWidget(self.addEmployeeButton)
        self.removeEmployeeButton = QtWidgets.QPushButton(self.adminEmployeeTable)
        self.removeEmployeeButton.setMinimumSize(QtCore.QSize(100, 31))
        self.removeEmployeeButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.removeEmployeeButton.setStyleSheet("QWidget {\n"
                                                "    background-color: rgb(250, 234, 153);\n"
                                                "    border: 1px solid rgb(250, 201, 131);\n"
                                                "    border-radius: 10px;\n"
                                                "    text-align: center;\n"
                                                "}\n"
                                                "\n"
                                                "QAbstractButton {\n"
                                                "    \n"
                                                "    font: 87 8pt \"Arial Black\";\n"
                                                "    color: rgb(82, 30, 1);\n"
                                                "}\n"
                                                "QPushButton:hover:!pressed {\n"
                                                "  border: 2px solid rgb(250, 201, 131);\n"
                                                "}")
        self.removeEmployeeButton.setObjectName("removeEmployeeButton")
        self.employeeTableEditLayout.addWidget(self.removeEmployeeButton)
        self.findEmployeeButton = QtWidgets.QPushButton(self.adminEmployeeTable)
        self.findEmployeeButton.setMinimumSize(QtCore.QSize(100, 31))
        self.findEmployeeButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.findEmployeeButton.setStyleSheet("QWidget {\n"
                                              "    background-color: rgb(250, 234, 153);\n"
                                              "    border: 1px solid rgb(250, 201, 131);\n"
                                              "    border-radius: 10px;\n"
                                              "    text-align: center;\n"
                                              "}\n"
                                              "\n"
                                              "QAbstractButton {\n"
                                              "    \n"
                                              "    font: 87 8pt \"Arial Black\";\n"
                                              "    color: rgb(82, 30, 1);\n"
                                              "}\n"
                                              "QPushButton:hover:!pressed {\n"
                                              "  border: 2px solid rgb(250, 201, 131);\n"
                                              "}")
        self.findEmployeeButton.setObjectName("findEmployeeButton")
        self.employeeTableEditLayout.addWidget(self.findEmployeeButton)
        self.sortEmployeeTypeLabel = QtWidgets.QLabel(self.adminEmployeeTable)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sortEmployeeTypeLabel.sizePolicy().hasHeightForWidth())
        self.sortEmployeeTypeLabel.setSizePolicy(sizePolicy)
        self.sortEmployeeTypeLabel.setStyleSheet("QLabel {\n"
                                                 "    font: 87 8pt \"Arial Black\";\n"
                                                 "    color: rgb(82, 30, 1);\n"
                                                 "}")
        self.sortEmployeeTypeLabel.setObjectName("sortEmployeeTypeLabel")
        self.employeeTableEditLayout.addWidget(self.sortEmployeeTypeLabel)
        self.checkBoxName = QtWidgets.QCheckBox(self.adminEmployeeTable)
        self.checkBoxName.setStyleSheet("\n"
                                        "\n"
                                        "padding-left: 5px;\n"
                                        "font: 8pt \"Arial Black\";")
        self.checkBoxName.setTristate(True)
        self.checkBoxName.setObjectName("checkBoxName")
        self.sortTypeEmployeeButtonGroup = QtWidgets.QButtonGroup(AdministratorMainWindow)
        self.sortTypeEmployeeButtonGroup.setObjectName("sortTypeEmployeeButtonGroup")
        self.sortTypeEmployeeButtonGroup.addButton(self.checkBoxName)
        self.employeeTableEditLayout.addWidget(self.checkBoxName)
        self.checkBoxJob = QtWidgets.QCheckBox(self.adminEmployeeTable)
        self.checkBoxJob.setStyleSheet("\n"
                                       "padding-left: 5px;\n"
                                       "font: 8pt \"Arial Black\";")
        self.checkBoxJob.setTristate(False)
        self.checkBoxJob.setObjectName("checkBoxJob")
        self.sortTypeEmployeeButtonGroup.addButton(self.checkBoxJob)
        self.employeeTableEditLayout.addWidget(self.checkBoxJob)
        self.sortEmployeeOrderLabel = QtWidgets.QLabel(self.adminEmployeeTable)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sortEmployeeOrderLabel.sizePolicy().hasHeightForWidth())
        self.sortEmployeeOrderLabel.setSizePolicy(sizePolicy)
        self.sortEmployeeOrderLabel.setStyleSheet("QLabel {\n"
                                                  "    font: 87 8pt \"Arial Black\";\n"
                                                  "    color: rgb(82, 30, 1);\n"
                                                  "}")
        self.sortEmployeeOrderLabel.setObjectName("sortEmployeeOrderLabel")
        self.employeeTableEditLayout.addWidget(self.sortEmployeeOrderLabel)
        self.empRadioButtonAscending = QtWidgets.QRadioButton(self.adminEmployeeTable)
        self.empRadioButtonAscending.setStyleSheet("\n"
                                                   "padding-left: 5px;\n"
                                                   "font: 8pt \"Arial Black\";")
        self.empRadioButtonAscending.setChecked(True)
        self.empRadioButtonAscending.setObjectName("empRadioButtonAscending")
        self.sortOrderEmployeeButtonGroup = QtWidgets.QButtonGroup(AdministratorMainWindow)
        self.sortOrderEmployeeButtonGroup.setObjectName("sortOrderEmployeeButtonGroup")
        self.sortOrderEmployeeButtonGroup.addButton(self.empRadioButtonAscending)
        self.employeeTableEditLayout.addWidget(self.empRadioButtonAscending)
        self.empRadioButtonDescending = QtWidgets.QRadioButton(self.adminEmployeeTable)
        self.empRadioButtonDescending.setStyleSheet("\n"
                                                    "padding-left: 5px;\n"
                                                    "font: 8pt \"Arial Black\";")
        self.empRadioButtonDescending.setObjectName("empRadioButtonDescending")
        self.sortOrderEmployeeButtonGroup.addButton(self.empRadioButtonDescending)
        self.employeeTableEditLayout.addWidget(self.empRadioButtonDescending)
        self.sortEmployeeButton = QtWidgets.QPushButton(self.adminEmployeeTable)
        self.sortEmployeeButton.setMinimumSize(QtCore.QSize(100, 31))
        self.sortEmployeeButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.sortEmployeeButton.setStyleSheet("QWidget {\n"
                                              "    background-color: rgb(250, 234, 153);\n"
                                              "    border: 1px solid rgb(250, 201, 131);\n"
                                              "    border-radius: 10px;\n"
                                              "    text-align: center;\n"
                                              "}\n"
                                              "\n"
                                              "QAbstractButton {\n"
                                              "    \n"
                                              "    font: 87 8pt \"Arial Black\";\n"
                                              "    color: rgb(82, 30, 1);\n"
                                              "}\n"
                                              "QPushButton:hover:!pressed {\n"
                                              "  border: 2px solid rgb(250, 201, 131);\n"
                                              "}")
        self.sortEmployeeButton.setObjectName("sortEmployeeButton")
        self.employeeTableEditLayout.addWidget(self.sortEmployeeButton)
        self.horizontalLayout.addLayout(self.employeeTableEditLayout)
        self.verticalLayout.addWidget(self.adminEmployeeTable)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.exhibitLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exhibitLabel.sizePolicy().hasHeightForWidth())
        self.exhibitLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.exhibitLabel.setFont(font)
        self.exhibitLabel.setStyleSheet("QLabel {\n"
                                        "    font: 87 12pt \"Arial Black\";\n"
                                        "    color: rgb(82, 30, 1);\n"
                                        "}")
        self.exhibitLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.exhibitLabel.setObjectName("exhibitLabel")
        self.horizontalLayout_4.addWidget(self.exhibitLabel)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem3)
        self.setVisibleExhibitTableButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setVisibleExhibitTableButton.sizePolicy().hasHeightForWidth())
        self.setVisibleExhibitTableButton.setSizePolicy(sizePolicy)
        self.setVisibleExhibitTableButton.setMinimumSize(QtCore.QSize(40, 40))
        self.setVisibleExhibitTableButton.setStyleSheet("\n"
                                                        "\n"
                                                        "QWidget {\n"
                                                        "    border 1px solid;\n"
                                                        "    border-radius: 20px;\n"
                                                        "    background-color: transparent;\n"
                                                        "    \n"
                                                        "}\n"
                                                        "\n"
                                                        "QPushButton {\n"
                                                        "    border-radius: 20px;\n"
                                                        "    border-style: outset;\n"
                                                        "\n"
                                                        "}\n"
                                                        "\n"
                                                        "QPushButton:hover {\n"
                                                        "    background: qradialgradient(\n"
                                                        "        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
                                                        "        radius: 1.35, stop: 0.7 #faea99, stop: 1 #521e01\n"
                                                        "        );\n"
                                                        "    }\n"
                                                        "\n"
                                                        "QPushButton:pressed {\n"
                                                        "    border-style: inset;\n"
                                                        "    background: qradialgradient(\n"
                                                        "        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,\n"
                                                        "        radius: 1.35, stop: 0 #fff, stop: 1 #521e01\n"
                                                        "        );\n"
                                                        "    }")
        self.setVisibleExhibitTableButton.setText("")
        self.setVisibleExhibitTableButton.setIcon(icon)
        self.setVisibleExhibitTableButton.setIconSize(QtCore.QSize(40, 40))
        self.setVisibleExhibitTableButton.setObjectName("setVisibleExhibitTableButton")
        self.horizontalLayout_4.addWidget(self.setVisibleExhibitTableButton)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.adminExhibitTable = QtWidgets.QWidget(self.centralwidget)
        self.adminExhibitTable.setMinimumSize(QtCore.QSize(301, 400))
        self.adminExhibitTable.setStyleSheet("")
        self.adminExhibitTable.setObjectName("adminExhibitTable")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.adminExhibitTable)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.exhibitTable = MuseTableWidget({"Наименование": MuseTableWidget.ItemType.varchar,
                                             "Вид": MuseTableWidget.ItemType.enumType,
                                             "Номер зала": MuseTableWidget.ItemType.enumType,
                                             "Описание": MuseTableWidget.ItemType.varchar,
                                             "Размер": MuseTableWidget.ItemType.varchar,
                                             "Год создания": MuseTableWidget.ItemType.integer,
                                             "Происхождение": MuseTableWidget.ItemType.varchar,
                                             "Состояние": MuseTableWidget.ItemType.enumType}, parent=self.adminExhibitTable)
        self.exhibitTable.horizontalHeader().setStretchLastSection(True)

        self.horizontalLayout_2.addWidget(self.exhibitTable)
        self.exhibitTableEditLayout = QtWidgets.QVBoxLayout()
        self.exhibitTableEditLayout.setObjectName("exhibitTableEditLayout")
        spacerItem4 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.exhibitTableEditLayout.addItem(spacerItem4)
        self.editExhibitButton = QtWidgets.QPushButton(self.adminExhibitTable)
        self.editExhibitButton.setEnabled(False)
        self.editExhibitButton.setMinimumSize(QtCore.QSize(100, 31))
        self.editExhibitButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.editExhibitButton.setStyleSheet("QWidget {\n"
                                             "    background-color: rgb(250, 234, 153);\n"
                                             "    border: 1px solid rgb(250, 201, 131);\n"
                                             "    border-radius: 10px;\n"
                                             "    text-align: center;\n"
                                             "}\n"
                                             "\n"
                                             "QAbstractButton {\n"
                                             "    \n"
                                             "    font: 87 8pt \"Arial Black\";\n"
                                             "    color: rgb(82, 30, 1);\n"
                                             "}\n"
                                             "QPushButton:hover:!pressed {\n"
                                             "  border: 2px solid rga(250, 201, 131);\n"
                                             "}\n"
                                             "\n"
                                             "\n"
                                             "\n"
                                             "QPushButton:!enabled {\n"
                                             "    \n"
                                             "    background: rgba(160, 160, 160, 100);\n"
                                             "    font: 87 8pt \"Arial Black\";\n"
                                             "    border: 1px solid rgb(150, 150, 150);\n"
                                             "    border-radius: 10px;\n"
                                             "    color: rgba(82, 30, 1, 100);\n"
                                             "}")
        self.editExhibitButton.setObjectName("editExhibitButton")
        self.exhibitTableEditLayout.addWidget(self.editExhibitButton)
        self.findExhibitButton = QtWidgets.QPushButton(self.adminExhibitTable)
        self.findExhibitButton.setMinimumSize(QtCore.QSize(100, 31))
        self.findExhibitButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.findExhibitButton.setStyleSheet("QWidget {\n"
                                             "    background-color: rgb(250, 234, 153);\n"
                                             "    border: 1px solid rgb(250, 201, 131);\n"
                                             "    border-radius: 10px;\n"
                                             "    text-align: center;\n"
                                             "}\n"
                                             "\n"
                                             "QAbstractButton {\n"
                                             "    \n"
                                             "    font: 87 8pt \"Arial Black\";\n"
                                             "    color: rgb(82, 30, 1);\n"
                                             "}\n"
                                             "QPushButton:hover:!pressed {\n"
                                             "  border: 2px solid rgb(250, 201, 131);\n"
                                             "}")
        self.findExhibitButton.setObjectName("findExhibitButton")
        self.exhibitTableEditLayout.addWidget(self.findExhibitButton)
        self.sortExhibitTypeLabel = QtWidgets.QLabel(self.adminExhibitTable)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sortExhibitTypeLabel.sizePolicy().hasHeightForWidth())
        self.sortExhibitTypeLabel.setSizePolicy(sizePolicy)
        self.sortExhibitTypeLabel.setStyleSheet("QLabel {\n"
                                                "    font: 87 8pt \"Arial Black\";\n"
                                                "    color: rgb(82, 30, 1);\n"
                                                "}")
        self.sortExhibitTypeLabel.setObjectName("sortExhibitTypeLabel")
        self.exhibitTableEditLayout.addWidget(self.sortExhibitTypeLabel)
        self.checkBoxExhibitName = QtWidgets.QCheckBox(self.adminExhibitTable)
        self.checkBoxExhibitName.setStyleSheet("\n"
                                               "\n"
                                               "padding-left: 5px;\n"
                                               "font: 8pt \"Arial Black\";")
        self.checkBoxExhibitName.setTristate(True)
        self.checkBoxExhibitName.setObjectName("checkBoxExhibitName")
        self.sortTypeExhibitButtonGroup = QtWidgets.QButtonGroup(AdministratorMainWindow)
        self.sortTypeExhibitButtonGroup.setObjectName("sortTypeExhibitButtonGroup")
        self.sortTypeExhibitButtonGroup.addButton(self.checkBoxExhibitName)
        self.exhibitTableEditLayout.addWidget(self.checkBoxExhibitName)
        self.checkBoxExhibitType = QtWidgets.QCheckBox(self.adminExhibitTable)
        self.checkBoxExhibitType.setStyleSheet("\n"
                                               "padding-left: 5px;\n"
                                               "font: 8pt \"Arial Black\";")
        self.checkBoxExhibitType.setTristate(False)
        self.checkBoxExhibitType.setObjectName("checkBoxExhibitType")
        self.sortTypeExhibitButtonGroup.addButton(self.checkBoxExhibitType)
        self.exhibitTableEditLayout.addWidget(self.checkBoxExhibitType)
        self.checkBoxArea = QtWidgets.QCheckBox(self.adminExhibitTable)
        self.checkBoxArea.setStyleSheet("\n"
                                        "padding-left: 5px;\n"
                                        "font: 8pt \"Arial Black\";")
        self.checkBoxArea.setTristate(False)
        self.checkBoxArea.setObjectName("checkBoxArea")
        self.sortTypeExhibitButtonGroup.addButton(self.checkBoxArea)
        self.exhibitTableEditLayout.addWidget(self.checkBoxArea)
        self.checkBoxSize = QtWidgets.QCheckBox(self.adminExhibitTable)
        self.checkBoxSize.setStyleSheet("\n"
                                        "padding-left: 5px;\n"
                                        "font: 8pt \"Arial Black\";")
        self.checkBoxSize.setTristate(False)
        self.checkBoxSize.setObjectName("checkBoxSize")
        self.sortTypeExhibitButtonGroup.addButton(self.checkBoxSize)
        self.exhibitTableEditLayout.addWidget(self.checkBoxSize)
        self.checkBoxCreationAge = QtWidgets.QCheckBox(self.adminExhibitTable)
        self.checkBoxCreationAge.setStyleSheet("\n"
                                               "padding-left: 5px;\n"
                                               "font: 8pt \"Arial Black\";")
        self.checkBoxCreationAge.setTristate(False)
        self.checkBoxCreationAge.setObjectName("checkBoxCreationAge")
        self.sortTypeExhibitButtonGroup.addButton(self.checkBoxCreationAge)
        self.exhibitTableEditLayout.addWidget(self.checkBoxCreationAge)
        self.sortExhibitOrderLabel = QtWidgets.QLabel(self.adminExhibitTable)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sortExhibitOrderLabel.sizePolicy().hasHeightForWidth())
        self.sortExhibitOrderLabel.setSizePolicy(sizePolicy)
        self.sortExhibitOrderLabel.setStyleSheet("QLabel {\n"
                                                 "    font: 87 8pt \"Arial Black\";\n"
                                                 "    color: rgb(82, 30, 1);\n"
                                                 "}")
        self.sortExhibitOrderLabel.setObjectName("sortExhibitOrderLabel")
        self.exhibitTableEditLayout.addWidget(self.sortExhibitOrderLabel)
        self.exRadioButtonAscending = QtWidgets.QRadioButton(self.adminExhibitTable)
        self.exRadioButtonAscending.setStyleSheet("\n"
                                                  "padding-left: 5px;\n"
                                                  "font: 8pt \"Arial Black\";")
        self.exRadioButtonAscending.setChecked(True)
        self.exRadioButtonAscending.setObjectName("exRadioButtonAscending")
        self.exhibitTableEditLayout.addWidget(self.exRadioButtonAscending)
        self.exRadioButtonDescending = QtWidgets.QRadioButton(self.adminExhibitTable)
        self.exRadioButtonDescending.setStyleSheet("\n"
                                                   "padding-left: 5px;\n"
                                                   "font: 8pt \"Arial Black\";")
        self.exRadioButtonDescending.setObjectName("exRadioButtonDescending")
        self.exhibitTableEditLayout.addWidget(self.exRadioButtonDescending)
        self.sortExhibitButton = QtWidgets.QPushButton(self.adminExhibitTable)
        self.sortExhibitButton.setMinimumSize(QtCore.QSize(100, 31))
        self.sortExhibitButton.setMaximumSize(QtCore.QSize(16777215, 31))
        self.sortExhibitButton.setStyleSheet("QWidget {\n"
                                             "    background-color: rgb(250, 234, 153);\n"
                                             "    border: 1px solid rgb(250, 201, 131);\n"
                                             "    border-radius: 10px;\n"
                                             "    text-align: center;\n"
                                             "}\n"
                                             "\n"
                                             "QAbstractButton {\n"
                                             "    \n"
                                             "    font: 87 8pt \"Arial Black\";\n"
                                             "    color: rgb(82, 30, 1);\n"
                                             "}\n"
                                             "QPushButton:hover:!pressed {\n"
                                             "  border: 2px solid rgb(250, 201, 131);\n"
                                             "}")
        self.sortExhibitButton.setObjectName("sortExhibitButton")
        self.exhibitTableEditLayout.addWidget(self.sortExhibitButton)
        self.horizontalLayout_2.addLayout(self.exhibitTableEditLayout)
        self.verticalLayout.addWidget(self.adminExhibitTable)
        AdministratorMainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(AdministratorMainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 979, 21))
        self.menubar.setObjectName("menubar")
        self.profileMenu = QtWidgets.QMenu(self.menubar)
        self.profileMenu.setObjectName("profileMenu")
        self.employeeMenu = QtWidgets.QMenu(self.menubar)
        self.employeeMenu.setObjectName("employeeMenu")
        self.exhibitMenu = QtWidgets.QMenu(self.menubar)
        self.exhibitMenu.setObjectName("exhibitMenu")
        AdministratorMainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(AdministratorMainWindow)
        self.statusbar.setObjectName("statusbar")
        AdministratorMainWindow.setStatusBar(self.statusbar)
        self.viewProfileInfoAction = QtWidgets.QAction(AdministratorMainWindow)
        self.viewProfileInfoAction.setObjectName("viewProfileInfoAction")
        self.quitSessionAction = QtWidgets.QAction(AdministratorMainWindow)
        self.quitSessionAction.setObjectName("quitSessionAction")
        self.selectEmployeeTableAction_ = QtWidgets.QAction(AdministratorMainWindow)
        self.selectEmployeeTableAction_.setCheckable(True)
        self.selectEmployeeTableAction_.setChecked(True)
        self.selectEmployeeTableAction_.setObjectName("selectEmployeeTableAction_")
        self.addEmployeeAction = QtWidgets.QAction(AdministratorMainWindow)
        self.addEmployeeAction.setObjectName("addEmployeeAction")
        self.removeEmployeeAction = QtWidgets.QAction(AdministratorMainWindow)
        self.removeEmployeeAction.setObjectName("removeEmployeeAction")
        self.findEmployeeAction = QtWidgets.QAction(AdministratorMainWindow)
        self.findEmployeeAction.setEnabled(False)
        self.findEmployeeAction.setObjectName("findEmployeeAction")
        self.selectExhibitAction = QtWidgets.QAction(AdministratorMainWindow)
        self.selectExhibitAction.setCheckable(True)
        self.selectExhibitAction.setChecked(True)
        self.selectExhibitAction.setObjectName("selectExhibitAction")
        self.findExhibitAction = QtWidgets.QAction(AdministratorMainWindow)
        self.findExhibitAction.setEnabled(False)
        self.findExhibitAction.setObjectName("findExhibitAction")
        self.profileMenu.addAction(self.viewProfileInfoAction)
        self.profileMenu.addAction(self.quitSessionAction)
        self.employeeMenu.addAction(self.selectEmployeeTableAction_)
        self.employeeMenu.addSeparator()
        self.employeeMenu.addAction(self.addEmployeeAction)
        self.employeeMenu.addAction(self.removeEmployeeAction)
        self.employeeMenu.addAction(self.findEmployeeAction)
        self.exhibitMenu.addAction(self.selectExhibitAction)
        self.exhibitMenu.addSeparator()
        self.exhibitMenu.addAction(self.findExhibitAction)
        self.menubar.addAction(self.profileMenu.menuAction())
        self.menubar.addAction(self.employeeMenu.menuAction())
        self.menubar.addAction(self.exhibitMenu.menuAction())
        self.addEmployeeAction.setEnabled(False)
        self.removeEmployeeAction.setEnabled(False)
        self.editTableShortCut = QtWidgets.QShortcut(QtGui.QKeySequence("5"), AdministratorMainWindow)
        self.editTableShortCut.setContext(QtCore.Qt.WidgetWithChildrenShortcut)

        self.retranslateUi(AdministratorMainWindow)
        QtCore.QMetaObject.connectSlotsByName(AdministratorMainWindow)

    def retranslateUi(self, AdministratorMainWindow):
        _translate = QtCore.QCoreApplication.translate
        AdministratorMainWindow.setWindowTitle(_translate("AdministratorMainWindow", "Главное окно (Администратор)"))
        self.employeeLabel.setText(_translate("AdministratorMainWindow", "Сотрудники"))
        self.employeeTable.setSortingEnabled(False)
        __sortingEnabled = self.employeeTable.isSortingEnabled()
        self.employeeTable.setSortingEnabled(False)
        self.employeeTable.setSortingEnabled(__sortingEnabled)
        self.editEmployeeButton.setText(_translate("AdministratorMainWindow", "Редактировать"))
        self.addEmployeeButton.setText(_translate("AdministratorMainWindow", "Добавить сотрудника"))
        self.removeEmployeeButton.setText(_translate("AdministratorMainWindow", "Уволить сотрудника"))
        self.findEmployeeButton.setText(_translate("AdministratorMainWindow", "Поиск"))
        self.sortEmployeeTypeLabel.setText(_translate("AdministratorMainWindow", "Параметры сортировки:"))
        self.checkBoxName.setText(_translate("AdministratorMainWindow", "Фио"))
        self.checkBoxJob.setText(_translate("AdministratorMainWindow", "Должность"))
        self.sortEmployeeOrderLabel.setText(_translate("AdministratorMainWindow", "Порядок сортировки:"))
        self.empRadioButtonAscending.setText(_translate("AdministratorMainWindow", "По возрастанию"))
        self.empRadioButtonDescending.setText(_translate("AdministratorMainWindow", "По убыванию"))
        self.sortEmployeeButton.setText(_translate("AdministratorMainWindow", "Сортировать"))
        self.exhibitLabel.setText(_translate("AdministratorMainWindow", "Экспонаты"))
        self.exhibitTable.setSortingEnabled(False)
        self.editExhibitButton.setText(_translate("AdministratorMainWindow", "Редактировать"))
        self.findExhibitButton.setText(_translate("AdministratorMainWindow", "Поиск"))
        self.sortExhibitTypeLabel.setText(_translate("AdministratorMainWindow", "Параметры сортировки:"))
        self.checkBoxExhibitName.setText(_translate("AdministratorMainWindow", "Наименование"))
        self.checkBoxExhibitType.setText(_translate("AdministratorMainWindow", "Вид"))
        self.checkBoxArea.setText(_translate("AdministratorMainWindow", "Номер зала"))
        self.checkBoxSize.setText(_translate("AdministratorMainWindow", "Размер"))
        self.checkBoxCreationAge.setText(_translate("AdministratorMainWindow", "Год создания"))
        self.sortExhibitOrderLabel.setText(_translate("AdministratorMainWindow", "Порядок сортировки:"))
        self.exRadioButtonAscending.setText(_translate("AdministratorMainWindow", "По возрастанию"))
        self.exRadioButtonDescending.setText(_translate("AdministratorMainWindow", "По убыванию"))
        self.sortExhibitButton.setText(_translate("AdministratorMainWindow", "Сортировать"))
        self.profileMenu.setTitle(_translate("AdministratorMainWindow", "Профиль"))
        self.employeeMenu.setTitle(_translate("AdministratorMainWindow", "Сотрудники"))
        self.exhibitMenu.setTitle(_translate("AdministratorMainWindow", "Эксопнаты"))
        self.viewProfileInfoAction.setText(_translate("AdministratorMainWindow", "Показать"))
        self.quitSessionAction.setText(_translate("AdministratorMainWindow", "Выход"))
        self.quitSessionAction.setShortcut(_translate("AdministratorMainWindow", "Ctrl+Q"))
        self.selectEmployeeTableAction_.setText(_translate("AdministratorMainWindow", "Выбрать"))
        self.selectEmployeeTableAction_.setShortcut(_translate("AdministratorMainWindow", "F1"))
        self.addEmployeeAction.setText(_translate("AdministratorMainWindow", "Добавить"))
        self.addEmployeeAction.setShortcut(_translate("AdministratorMainWindow", "Ctrl+N"))
        self.removeEmployeeAction.setText(_translate("AdministratorMainWindow", "Уволить"))
        self.removeEmployeeAction.setShortcut(_translate("AdministratorMainWindow", "Alt+D"))
        self.findEmployeeAction.setText(_translate("AdministratorMainWindow", "Поиск..."))
        self.findEmployeeAction.setShortcut(_translate("AdministratorMainWindow", "Ctrl+F"))
        self.selectExhibitAction.setText(_translate("AdministratorMainWindow", "Выбрать"))
        self.selectExhibitAction.setShortcut(_translate("AdministratorMainWindow", "F2"))
        self.findExhibitAction.setText(_translate("AdministratorMainWindow", "Поиск..."))
        self.findExhibitAction.setShortcut(_translate("AdministratorMainWindow", "Ctrl+F"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    AdministratorMainWindow = QtWidgets.QMainWindow()
    ui = Ui_AdministratorMainWindow()
    ui.setupUi(AdministratorMainWindow)
    AdministratorMainWindow.show()
    sys.exit(app.exec_())
